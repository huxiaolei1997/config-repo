zuul:
  routes:
    product: /myProduct/**
  # 不过滤cookie
  sensitiveHeaders:
  #    myProduct:
  #      path: /myProduct/**
  #      serviceId: product
  host:
    connect-timeout-millis: 60000
    socket-timeout-millis: 60000
# 排除某些路由
#  ignored-patterns:
#    - /**/product/listForOrder
ribbon:
  ReadTimeout: 60000
  ConnectTimeout: 60000
spring:
  redis:
  host: 139.196.140.168
  port: 6379
  password: hxl2580
#hystrix:
#  command:
#    default:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 60000
# 如果的时候出现 Hystrix ReadTimeOut，需要配置 Zuul 超时时间
# https://cloud.spring.io/spring-cloud-static/Finchley.SR1/multi/multi__router_and_filter_zuul.html#_zuul_timeouts
# server.port=8087
# 访问 product 服务下的 product/list 接口
# 这样访问 localhost:8087/product/product/list
# 自定义路由
#zuul:/
#  routes:
#    myProduct: # 这里的命名不一定和 path 中的 myProduct 相同，可以任意指定
#      path: /myProduct/**
#      serviceId: product
# 简洁配置，和上面的效果一样
# zuul:
#  routes:
#    product: /myProduct/**
# 访问地址从localhost:8087/product/product/list
# 变为
# localhost:8087/myProduct/product/list
# 禁止某个url被外部访问，只能服务间调用
# zuul:
#   ignored-patterns:
#     - /product/product/listForOrder
#     - /myProduct/product/listForOrder
# 或者这样写
# zuul:
#   ignored-patterns:
#     - /**/product/listForOrder
# 这样配置我们就不能通过 localhost:8087/product/product/listForOrder
# 或者
# localhost:8087/myProduct/product/listForOrder 来访问这个 url 了
# 查看所有可以访问的服务url
management:
  endpoints:
    web:
      exposure:
        include: "*"
